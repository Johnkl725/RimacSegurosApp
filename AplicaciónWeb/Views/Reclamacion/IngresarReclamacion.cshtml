@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "Ingresar Reclamación";
}

<div class="container mt-5">
    <h2 class="text-center text-danger">Ingresar Reclamación</h2>
    <p class="text-muted text-center">Complete el formulario para registrar su reclamación.</p>

    <form asp-action="IngresarReclamacion" method="post" enctype="multipart/form-data" class="p-4 shadow-sm rounded" id="reclamacionForm" style="background-color: #f9f9f9;font-size: 1.2rem;">
        <div class="form-group">
            <label for="idSiniestro" class="font-weight-bold">Siniestro</label>
            <select name="idSiniestro" class="form-control" required>
                <option value="">Seleccione un siniestro</option>
                @if (ViewBag.Siniestros != null)
                {
                    foreach (var siniestro in ViewBag.Siniestros)
                    {
                        <option value="@siniestro.IdSiniestro">
                            Número @siniestro.Numero - ID: @siniestro.IdSiniestro - @siniestro.Tipo (Fecha: @siniestro.FechaCreacion.ToString("dd/MM/yyyy"))
                        </option>
                    }
                }
                else
                {
                    <option value="">No hay siniestros disponibles</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="tipo" class="font-weight-bold">Tipo de Reclamación</label>
            <select name="tipo" class="form-control" required>
                <option value="">Seleccione un tipo</option>
                <option value="Gastos Asociados">Gastos Asociados</option>
                <option value="Robo">Robo</option>
                <option value="Daño Material">Daño Material</option>
            </select>
        </div>

        <div class="form-group">
            <label for="descripcion" class="font-weight-bold">Descripción</label>
            <textarea name="descripcion" class="form-control" rows="4" placeholder="Describa brevemente el motivo de la reclamación..." required></textarea>
        </div>

        <div class="form-group">
            <label for="archivos" class="font-weight-bold">Subir Documentos Justificativos</label>
            <input type="file" name="archivos" multiple class="form-control" accept=".jpg,.jpeg,.png,.pdf" id="fileInput" required />
            <small class="form-text text-muted">
                ⚠️Debe subir al menos un documento justificativo (JPEG, PNG, PDF) con un tamaño máximo de 5MB cada uno.
                <strong>(Puede seleccionar hasta 5 documentos)</strong>
            </small>
        </div>

        <div class="d-flex justify-content-between">
            <button type="submit" class="btn btn-lg btn-danger w-45">Enviar</button>
            <a asp-action="BeneficiarioDashboard" asp-controller="Beneficiario" class="btn btn-lg btn-secondary w-45">Cancelar</a>
        </div>
    </form>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-3">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger mt-3">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
</div>

<div id="alertContainer" class="custom-alert hidden">
    <div class="alert-content">
        <span id="alertMessage"></span>
        <button class="close-alert" onclick="closeAlert()">Aceptar</button>
    </div>
</div>

<script>
    document.getElementById('fileInput').addEventListener('change', function (e) {
        const maxFileCount = 5; // Máximo número de archivos permitidos
        const maxFileSize = 5 * 1024 * 1024; // 5MB en bytes
        const fileInput = document.getElementById('fileInput');
        const files = fileInput.files;
        let errorMessage = "";

        // Verificar la cantidad de archivos seleccionados
        if (files.length > maxFileCount) {
            errorMessage = `Solo puede subir un máximo de 5 archivos por reclamación. Actualmente ha seleccionado ${files.length}.`;
            showAlert(errorMessage);
            fileInput.value = ""; // Limpiar la selección de archivos
            return;
        }

        // Validar el tamaño de cada archivo
        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            if (file.size > maxFileSize) {
                errorMessage += `El archivo "${file.name}" supera el tamaño máximo permitido de 5MB.<br>`;
            }
        }

        if (errorMessage) {
            showAlert(errorMessage); // Mostrar alerta personalizada
            fileInput.value = ""; // Limpiar la selección de archivos
        }
    });



    function showAlert(message) {
        const alertContainer = document.getElementById('alertContainer');
        const alertMessage = document.getElementById('alertMessage');
        alertMessage.innerHTML = message;
        alertContainer.classList.remove('hidden'); // Mostrar alerta
    }

    function closeAlert() {
        const alertContainer = document.getElementById('alertContainer');
        alertContainer.classList.add('hidden'); // Ocultar alerta
    }
</script>





<style>
    .custom-alert {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1050;
        background: linear-gradient(145deg, #f8d7da, #f1b0b7);
        color: #721c24;
        padding: 25px 30px;
        border-radius: 12px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        width: 90%;
        max-width: 420px;
        font-family: 'Poppins', Arial, sans-serif;
        text-align: center;
        border: 1px solid rgba(242, 183, 189, 0.8);
        animation: fadeIn 0.3s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translate(-50%, -60%);
        }
        to {
            opacity: 1;
            transform: translate(-50%, -50%);
        }
    }

    .hidden {
        display: none;
    }

    .alert-content {
        position: relative;
    }

    .alert-content span {
        display: block;
        margin-bottom: 20px;
        font-size: 1.2rem;
        font-weight: 500;
        line-height: 1.6;
    }

    .close-alert {
        background: linear-gradient(145deg, #d9534f, #c9302c);
        color: white;
        border: none;
        padding: 12px 25px;
        font-size: 1rem;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease-in-out;
        font-family: 'Poppins', Arial, sans-serif;
        text-transform: uppercase;
        font-weight: 600;
    }

    .close-alert:hover {
        background: linear-gradient(145deg, #c9302c, #d9534f);
        box-shadow: 0 5px 15px rgba(217, 83, 79, 0.3);
    }

    .close-alert:focus {
        outline: none;
    }

    .custom-alert .icon {
        font-size: 2.5rem;
        margin-bottom: 15px;
        color: #c9302c;
    }
</style>

<div id="alertContainer" class="custom-alert hidden">
    <div class="alert-content">
        <div class="icon">⚠️</div> <!-- Ícono decorativo -->
        <span id="alertMessage">Este es un mensaje de alerta.</span>
        <button class="close-alert" onclick="closeAlert()">Aceptar</button>
    </div>
</div>








<style>
    h2 {
        margin-bottom: 20px;
        color: #b30000;
        font-weight: bold;
    }

    .form-group label {
        color: #b30000;
        font-weight: bold;
    }

    .btn-lg {
        padding: 10px 15px;
        font-size: 20px;
        background-color: #b30000;
        color: white;
        border: none;
        border-radius: 5px;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .btn-lg:hover {
            background-color: #8b0000;
            transform: scale(1.02);
            color: #ffffff;
        }

        .btn-lg:focus {
            outline: none;
            box-shadow: 0 0 10px rgba(179, 0, 0, 0.5);
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        padding: 10px 15px;
        font-size: 20px;
        border-radius: 5px;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .btn-secondary:hover {
            background-color: #565e64;
            transform: scale(1.02);
        }

    .form-control {
        border-radius: 0.25rem;
        background-color: #f2f2f2;
        border: 1px solid #b30000;
    }

    .shadow-sm {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .container {
        background-color: #fff5f5;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-text {
        color: #6c757d;
    }

    .w-45 {
        width: 45%;
    }
</style>
